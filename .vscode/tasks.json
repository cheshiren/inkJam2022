{
	// See https://go.microsoft.com/fwlink/?LinkId=733558
	// for the documentation about the tasks.json format
	"version": "2.0.0",
	"tasks": [
		// это зонтичный таск, который запускается при билде и зависит от нижеописанных тасков
		{
			"label": "compile",
			"type": "shell",
			"presentation": {
				"reveal": "silent"
			},
			// "command": "echo Hello",
			"dependsOrder": "sequence",
			"dependsOn": [
				"ink2json",
				"json2js",
				"js2dir",
				"removejson"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			}
		},
		// компилируем ink во встраиваемый JSON (нужно контролировать расположение inklecate)
		{
			"label": "ink2json",
			"type": "shell",
			"presentation": {
				"reveal": "silent"
			},
			"windows": {
				"command": "F:\\YandexDisk-cheshire@ifiction.ru\\Dropbox\\!IF\\Platforms\\Ink\\inklecate_0.9.0\\inklecate.exe ${fileBasename}",
			},
			"linux": {
				"command": "'/media/cheshire/Media/YandexDisk-cheshire@ifiction.ru/Dropbox/!IF/Platforms/Ink/inklecate_0.9.0/inklecate.exe' ${fileBasename}",
			},
			"osx": {
				"command": "'/Users/vdobranov/Yandex.Disk.localized/Dropbox/!IF/Platforms/Ink/inklecate_0.9.0_mac/inklecate' ${fileBasename}"
			}
		},
		// создаём объект storyContent и копируем в него содержимое JSON. Сохраняем как {story}.js
		{
			"label": "json2js",
			"type": "shell",
			"presentation": {
				"reveal": "silent"
			},
			"windows": {
				"command": "'var storyContent = ' + (Get-Content -Path ${fileDirname}\\${fileBasenameNoExtension}.ink.json) + ';' | Set-Content -Path ${fileDirname}\\${fileBasenameNoExtension}.js -Encoding UTF8",
			},
			"linux": {
				"command": "echo 'var storyContent =' >> ${fileDirname}/${fileBasenameNoExtension}.js | cat ${fileDirname}/${fileBasenameNoExtension}.ink.json >> ${fileDirname}/${fileBasenameNoExtension}.js; echo ';' >> ${fileDirname}/${fileBasenameNoExtension}.js"
				// "command": "'var storyContent = ' + (Get-Content -Path ${fileDirname}\\${fileBasenameNoExtension}.ink.json) + ';' | Set-Content -Path ${fileDirname}\\${fileBasenameNoExtension}.js -Encoding UTF8",
			},
			"osx": {
				"command": "echo 'var storyContent =' >> ${fileDirname}/${fileBasenameNoExtension}.js | cat ${fileDirname}/${fileBasenameNoExtension}.ink.json >> ${fileDirname}/${fileBasenameNoExtension}.js; echo ';' >> ${fileDirname}/${fileBasenameNoExtension}.js"
			},
		},
		// перемещаем {story}.js в заранее созданную папку {story}, где уже лежит всё нужное
		{
			"label": "js2dir",
			"type": "shell",
			"presentation": {
				"reveal": "silent"
			},
			"windows": {
				"command": "Move-Item -Path ${fileDirname}\\${fileBasenameNoExtension}.js -Destination ${fileDirname}\\${fileBasenameNoExtension}\\${fileBasenameNoExtension}.js -Force | Remove-Item -Path ${fileDirname}\\${fileBasenameNoExtension}.ink.json -Force",
			},
			"linux": {
				"command": "mv ${fileDirname}/${fileBasenameNoExtension}.js ${fileDirname}/${fileBasenameNoExtension}",
			},
			"osx": {
				"command": "mv ${fileDirname}/${fileBasenameNoExtension}.js ${fileDirname}/${fileBasenameNoExtension}",
			},
		},
		// удаляем уже не нужный JSON
		{
			"label": "removejson",
			"type": "shell",
			"presentation": {
				"reveal": "silent"
			},
			"windows": {
				"command": "Remove-Item -Path ${fileDirname}\\${fileBasenameNoExtension}.ink.json",
			},
			"linux": {
				"command": "rm ${fileDirname}/${fileBasenameNoExtension}.ink.json",
			},
			"osx": {
				"command": "rm ${fileDirname}/${fileBasenameNoExtension}.ink.json",
			},
		}
	]
}